######################
### Query Language ###
######################

## define query language constants / function names

#hibernate.query.substitutions true 1, false 0, yes 'Y', no 'N', user user_
hibernate.query.substitutions yes 'Y', no 'N'

## select the classic query parser

# hibernate.query.factory_class org.hibernate.hql.classic.ClassicQueryTranslatorFactory

#################
### Platforms ###
#################

## HypersonicSQL

#hibernate.dialect org.hibernate.dialect.HSQLDialect

# Russian demo db
#hibernate.connection.url=jdbc\:hsqldb\:file\:tsdb/ru/tsdb;shutdown\=true

# English demo db
#hibernate.connection.url=jdbc\:hsqldb\:file\:tsdb/en/tsdb;shutdown\=true

#hibernate.connection.driver_class org.hsqldb.jdbcDriver
#hibernate.connection.username sa
#hibernate.connection.password


## MySQL

#hibernate.dialect org.hibernate.dialect.MySQLInnoDBDialect
#hibernate.connection.driver_class com.mysql.jdbc.Driver
#hibernate.connection.url=jdbc\:mysql\://localhost/trackstudio?useUnicode\=true&characterEncoding\=UTF-8&autoReconnect\=true
#hibernate.connection.username root
#hibernate.connection.password 

## PostgreSQL

hibernate.dialect org.hibernate.dialect.PostgreSQLDialect
#hibernate.connection.url jdbc:postgresql://db:5432/trackstudio
hibernate.connection.driver_class org.postgresql.Driver
#hibernate.connection.username trackstudio
# hibernate.connection.password trackstudio



## DB2

#hibernate.dialect org.hibernate.dialect.DB2Dialect
#hibernate.connection.url jdbc:db2://127.0.0.1/trackstudio
#hibernate.connection.driver_class COM.ibm.db2.jdbc.net.DB2Driver
#hibernate.connection.username db2admin
#hibernate.connection.password db2admin

## Oracle

#hibernate.dialect org.hibernate.dialect.Oracle10gDialect
#hibernate.connection.url jdbc:oracle:thin:@localhost:1521:ORCL
#hibernate.connection.driver_class oracle.jdbc.OracleDriver
#hibernate.connection.username trackstudio
#hibernate.connection.password trackstudio

## MS SQL Server

#hibernate.dialect org.hibernate.dialect.SQLServerDialect
#hibernate.connection.url jdbc:jtds:sqlserver://127.0.0.1:1433/trackstudio
#hibernate.connection.driver_class net.sourceforge.jtds.jdbc.Driver
#hibernate.connection.username sa
#hibernate.connection.password

## Interbase / Firebird

#hibernate.dialect org.hibernate.dialect.FirebirdDialect
#hibernate.connection.url jdbc:firebirdsql://localhost/c:/trackstudio.gdb?encoding\=UTF8
#hibernate.connection.driver_class org.firebirdsql.jdbc.FBDriver
#hibernate.connection.username sysdba
#hibernate.connection.password masterkey


###################################
### Apache DBCP Connection Pool ###
###################################

## connection pool

hibernate.dbcp.maxActive 30
hibernate.dbcp.whenExhaustedAction 2
hibernate.dbcp.maxWait 120000
hibernate.dbcp.maxIdle 10

## prepared statement cache

hibernate.dbcp.ps.maxActive 30
hibernate.dbcp.ps.whenExhaustedAction 1
hibernate.dbcp.ps.maxWait 120000
hibernate.dbcp.ps.maxIdle 10

## optional query to validate pooled connections:

#hibernate.dbcp.validationQuery select 1 from dual
#hibernate.dbcp.testOnBorrow true
#hibernate.dbcp.testOnReturn false

###################################
### Apache C3P0 Connection Pool ###
###################################

hibernate.connection.pool_size 30
hibernate.c3p0.min_size 10
hibernate.c3p0.max_size 20
hibernate.c3p0.max_statements 4000
hibernate.jdbc.batch_size 100
hibernate.c3p0.timeout 300
hibernate.c3p0.checkoutTimeout 60000
hibernate.c3p0.numHelperThreads 8
hibernate.c3p0.idle_test_period 200

hibernate.c3p0.unreturnedConnectionTimeout 3600
hibernate.c3p0.debugUnreturnedConnectionStackTraces true

#################################
### Plugin ConnectionProvider ###
#################################

## use a custom ConnectionProvider (if not set, Hibernate will choose a built-in ConnectionProvider using hueristics)

#hibernate.connection.provider_class org.hibernate.connection.DriverManagerConnectionProvider
#hibernate.connection.provider_class org.hibernate.connection.DatasourceConnectionProvider
hibernate.connection.provider_class org.hibernate.connection.C3P0ConnectionProvider
#hibernate.connection.provider_class org.hibernate.connection.DBCPConnectionProvider
#hibernate.connection.provider_class org.hibernate.connection.ProxoolConnectionProvider

##############################
### Miscellaneous Settings ###
##############################

## print all generated SQL to the console

#hibernate.show_sql true


## add comments to the generated SQL

#hibernate.use_sql_comments true


## generate statistics

#hibernate.generate_statistics true


## auto schema export

#hibernate.hbm2ddl.auto create-drop
#hibernate.hbm2ddl.auto create
#hibernate.hbm2ddl.auto update
#hibernate.hbm2ddl.auto validate


## specify a default schema and catalog for unqualified tablenames

#hibernate.default_schema test
#hibernate.default_catalog test


## enable ordering of SQL UPDATEs by primary key

hibernate.order_updates true


## set the maximum depth of the outer join fetch tree

hibernate.max_fetch_depth 7


## set the default batch size for batch fetching

# hibernate.default_batch_fetch_size 8


## rollback generated identifier values of deleted entities to default values

#hibernate.use_identifer_rollback true


## enable CGLIB reflection optimizer (enabled by default)

#hibernate.cglib.use_reflection_optimizer false



#####################
### JDBC Settings ###
#####################

## specify a JDBC isolation level

hibernate.connection.isolation 2


## enable JDBC autocommit (not recommended!)

#hibernate.connection.autocommit true


## set the JDBC fetch size

hibernate.jdbc.fetch_size 2000


## set the maximum JDBC 2 batch size (a nonzero value enables batching)

hibernate.jdbc.batch_size 2000


## enable batch updates even for versioned data

hibernate.jdbc.batch_versioned_data true


## enable use of JDBC 2 scrollable ResultSets (specifying a Dialect will cause Hibernate to use a sensible default)

#hibernate.jdbc.use_scrollable_resultset true


## use streams when writing binary types to / from JDBC

hibernate.jdbc.use_streams_for_binary true


## use JDBC 3 PreparedStatement.getGeneratedKeys() to get the identifier of an inserted row

#hibernate.jdbc.use_get_generated_keys false


## choose a custom JDBC batcher

# hibernate.jdbc.factory_class


## enable JDBC result set column alias caching 
## (minor performance enhancement for broken JDBC drivers)

# hibernate.jdbc.wrap_result_sets


## choose a custom SQL exception converter

#hibernate.jdbc.sql_exception_converter



##########################
### Second-level Cache ###
##########################

## optimize chache for minimal "puts" instead of minimal "gets" (good for clustered cache)

#hibernate.cache.use_minimal_puts true


## set a prefix for cache region names

hibernate.cache.region_prefix hibernate.test


## disable the second-level cache

#hibernate.cache.use_second_level_cache false


## enable the query cache

hibernate.cache.use_query_cache false

## store the second-level cache entries in a more human-friendly format

#hibernate.cache.use_structured_entries true


## choose a cache implementation

hibernate.cache.provider_class org.hibernate.cache.EhCacheProvider
#hibernate.cache.provider_class org.hibernate.cache.EmptyCacheProvider
#hibernate.cache.provider_class org.hibernate.cache.HashtableCacheProvider
#hibernate.cache.provider_class org.hibernate.cache.TreeCacheProvider
#hibernate.cache.provider_class org.hibernate.cache.OSCacheProvider
#hibernate.cache.provider_class org.hibernate.cache.SwarmCacheProvider
#hibernate.cache.provider_class com.trackstudio.tools.cache.QueryCachedSwarmCacheProvider

## choose a custom query cache implementation

#hibernate.cache.query_cache_factory

hibernate.current_session_context_class=thread
  # org.hibernate.context.ThreadLocalSessionContext
hibernate.transaction.auto_close_session=false

